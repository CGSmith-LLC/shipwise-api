<?php

namespace console\controllers;

use common\models\Customer;
use common\models\Order;
use common\models\Warehouse;
use yii\console\Controller;
use yii\console\ExitCode;
use yii\console\widgets\Table;
use yii\helpers\Console;

/**
 * Allows you to associate orders with warehouses or customers
 *
 */
class AssociateController extends Controller
{
    public $customer;


    public function options($actionID)
    {
        return parent::options($actionID); // TODO: Change the autogenerated stub
    }


    /**
     * Get a list of IDs for 'warehouse' or 'customer'
     *
     * @param $type string Set as 'warehouse' or 'customer'
     * @return int
     * @throws \Exception
     */
    public function actionList($type)
    {
        if ($type == 'warehouse') {
            $warehouses = Warehouse::find()->select(['id','name'])->asArray()->all();
            echo Table::widget([
                'headers' => ['id', 'name'],
                'rows' => $warehouses
            ]);

        }

        if ($type == 'customer') {
            $customers = Customer::find()->select(['id','name'])->asArray()->all();
            echo Table::widget([
                'headers' => ['id', 'name'],
                'rows' => $customers
            ]);
        }

        return ExitCode::OK;
    }

    /**
     * Associates Orders with a Warehouse identifier
     *
     * @return void
     */
    public function actionWarehouse($warehouseID, $customerID)
    {
        $warehouse = Warehouse::findOne($warehouseID);
        $customer = Customer::findOne($customerID);

        if ($warehouse == null || $customer == null) {
            $this->stderr("No matching warehouse or customer\n", Console::FG_RED);
            $this->stderr("yii associate/list", Console::FG_GREEN);
            $this->stderr(" <- should get you what you need\n");

            return ExitCode::UNSPECIFIED_ERROR;
        }

        $this->stdout("Warehouse: " . $warehouse->name . "\n", Console::FG_YELLOW);
        $this->stdout("Customer: " . $customer->name . "\n" , Console::FG_YELLOW);

        if ($this->confirm("Are you sure you want to associate ALL ORDERS from the above customer with the selected warehouse?\n")) {
            $this->stdout("You got it boss...\n\n", Console::FG_GREEN);
            $query = Order::find()
                ->where(['customer_id' => $customer->id]);

            $this->stdout("Total orders to convert: " . $query->count() . "\n");

            foreach ($query->batch() as $orders) {
                foreach ($orders as $order) {
                    $order->warehouse_id = $warehouse->id;
                    if (!$order->save()) {
                        $this->stderr("\nFailed to save ID: $order->id\n", Console::FG_RED);
                    } else {
                        $this->stdout(".");
                    }
                }
            }
            $this->stdout("\n\n");
        }

        return ExitCode::OK;
    }
}